# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Python Release Build

permissions:
  contents: read

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  pull_request:
    branches: ["main"]
  push:
    tags: ["*-rc*"]
    branches: ["branch-*"]

jobs:
  test-release:
    name: Test Python Release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: dtolnay/rust-toolchain@stable

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "27.4"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Build Python package
        run: |
          cd python
          uv sync --dev --no-install-package ballista 
          uv run pytest

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      # Use the --no-install-package to only install the dependencies
      # but do not yet build the rust library
      - name: Install dependencies
        run: |
          cd python 
          uv sync --dev --no-install-package ballista

      # Update output format to enable automatic inline annotations.
      - name: Run Ruff
        run: |
          cd python 
          uv run --no-project ruff check --output-format=github .
          uv run --no-project ruff format --check .

  generate-license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Generate license file
        run: uv run --no-project python ./dev/create_license.py
      - uses: actions/upload-artifact@v4
        with:
          name: python-wheel-license
          path: LICENSE.txt

  build-windows:
    needs: [generate-license]
    name: Windows x86_64
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: dtolnay/rust-toolchain@stable

      - run: rm LICENSE.txt
      - name: Download LICENSE.txt
        uses: actions/download-artifact@v4
        with:
          name: python-wheel-license
          path: .

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "27.4"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Build Python package
        run: |
          cd python
          uv sync --dev --no-install-package ballista
          uv run --no-project maturin build --release --strip

      - name: List Windows wheels
        run: dir python\target\wheels\
        # since the runner is dynamic shellcheck (from actionlint) can't infer this is powershell
        # so we specify it explicitly
        shell: powershell

      - name: Archive wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows-x86_64
          path: python/target/wheels/*

  build-macos-arm64:
    needs: [generate-license]
    name: Mac arm64
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: dtolnay/rust-toolchain@stable

      - run: rm LICENSE.txt
      - name: Download LICENSE.txt
        uses: actions/download-artifact@v4
        with:
          name: python-wheel-license
          path: .

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "27.4"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Build Python package
        run: |
          cd python
          uv sync --dev --no-install-package ballista
          uv run --no-project maturin build --release --strip

      - name: List Mac wheels
        run: find python/target/wheels/

      - name: Archive wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-macos-arm64
          path: python/target/wheels/*

  build-manylinux-x86_64:
    needs: [generate-license]
    name: Manylinux x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable

      - run: rm LICENSE.txt
      - name: Download LICENSE.txt
        uses: actions/download-artifact@v4
        with:
          name: python-wheel-license
          path: .

      - run: cat LICENSE.txt

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "27.4"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Build Python package
        run: |
          cd python
          uv sync --dev --no-install-package ballista
          uv run --no-project maturin build --release --strip

      - name: Archive wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-manylinux-x86_64
          path: python/target/wheels/*

  build-manylinux-aarch64:
    needs: [generate-license]
    name: Manylinux arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable

      - run: rm LICENSE.txt
      - name: Download LICENSE.txt
        uses: actions/download-artifact@v4
        with:
          name: python-wheel-license
          path: .

      - run: cat LICENSE.txt

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "27.4"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
        with:
          enable-cache: true

      - name: Build Python package
        run: |
          cd python
          uv sync --dev --no-install-package ballista
          uv run --no-project maturin build --release --strip

      - name: Archive wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-manylinux-aarch64
          path: python/target/wheels/*

  build-sdist:
    needs: [generate-license]
    name: Source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: dtolnay/rust-toolchain@stable

      - run: rm LICENSE.txt
      - name: Download LICENSE.txt
        uses: actions/download-artifact@v4
        with:
          name: python-wheel-license
          path: .

      - run: cat LICENSE.txt

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "27.4"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
        with:
          enable-cache: true

      - name: Build Python package
        run: |
          cd python
          uv sync --dev --no-install-package ballista
          uv run --no-project maturin build --release --sdist --out dist --strip

      - name: Assert sdist build does not generate wheels
        run: |
          if [ "$(ls -A target/wheels)" ]; then
            echo "Error: Sdist build generated wheels"
            exit 1
          else
            echo "Directory is clean"
          fi
        shell: bash

  merge-build-artifacts:
    runs-on: ubuntu-latest
    needs:
      - build-windows
      - build-macos-arm64
      - build-manylinux-x86_64
      - build-manylinux-aarch64
      - build-sdist
    steps:
      - name: Merge Build Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist
          pattern: dist-*

  # NOTE: PyPI publish needs to be done manually for now after release passed the vote
  # release:
  #   name: Publish in PyPI
  #   needs: [build-manylinux, build-python-mac-win]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v4
  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
